def solution(s):
    result = ""
    letters = [ "A","B","C","D","E","F","G","H","I","J","K","L","M","N","O","P","Q","R","S","T","U","V","W","X","Y","Z"]
    alphabet = ( 
        "000001100000", # A 
        "000001110000", # B
        "000001100100", # C 
        "000001100110", # D 
        "000001100010", # E 
        "000001110100", # F 
        "000001110110", # G 
        "000001110010", # H 
        "000001010100", # I
        "000001010110", # J
        "000001101000", # K
        "000001111000", # L
        "000001101100", # M
        "000001101110", # N
        "000001101010", # O
        "000001111100", # P
        "000001111110", # Q
        "000001111010", # R
        "000001011100", # S
        "000001011110", # T
        "000001101001", # U
        "000001111001", # V
        "000001010111", # W
        "000001101101", # X
        "000001101111", # Y
        "000001101011", # Z
        "100000", # A 
        "110000", # B
        "100100", # C 
        "100110", # D 
        "100010", # E 
        "110100", # F 
        "110110", # G 
        "110010", # H 
        "010100", # I
        "010110", # J
        "101000", # K
        "111000", # L
        "101100", # M
        "101110", # N
        "101010", # O
        "111100", # P
        "111110", # Q
        "111010", # R
        "011100", # S
        "011110", # T
        "101001", # U
        "111001", # V
        "010111", # W
        "101101", # X
        "101111", # Y
        "101011", # Z
    )

    for letter in list(s):
        if letter == " ":
            result += "000000"
            continue;
        if letter.upper() in letters:
            letter_code = alphabet[letters.index(letter.upper())]
            if not letter.isupper():
                letter_code = alphabet[letters.index(letter.upper()) + 26]
            result += letter_code
    return result



# =================== testing

# words = [
#     ["Code", ""],
#     # ["Braille", "000001 110000 111010 100000 010100 111000 111000 100010"],
#     # ["The quick brown fox jumps over the lazy dog","000001011110110010100010000000111110101001010100100100101000000000110000111010101010010111101110000000110100101010101101000000010110101001101100111100011100000000101010111001100010111010000000011110110010100010000000111000100000101011101111000000100110101010110110"],
#     # ["   A", "000000000000000001100000", "000001100000"],
#     # [" AaAa ", "000001100000100000000001100000100000"],
#     # [" AAA ", "000011100000100000100000"],
#     # [" AAB ", "000011100000100000110000"],
#     # [" AAB  a", "000001100000000001100000000001110000000000000000100000"], # @todo join zeros
#     # [" aaa AAA a", "100000100000100000000001100000000001100000000001100000000000100000"], # @todo join zeros
#     # ["To access the last n characters of a string in Python, ", '100000100000100000000001100000']
# ]


print(solution("code") == "100100101010100110100010", "result: 100100101010100110100010")
print(solution("Code") == "000001100100101010100110100010", "result: 000001100100101010100110100010")
print(solution("Braille") == "000001110000111010100000010100111000111000100010", "result: 000001110000111010100000010100111000111000100010")
print(solution("The quick brown fox jumps over the lazy dog") == "000001011110110010100010000000111110101001010100100100101000000000110000111010101010010111101110000000110100101010101101000000010110101001101100111100011100000000101010111001100010111010000000011110110010100010000000111000100000101011101111000000100110101010110110", "result:000001011110110010100010000000111110101001010100100100101000000000110000111010101010010111101110000000110100101010101101000000010110101001101100111100011100000000101010111001100010111010000000011110110010100010000000111000100000101011101111000000100110101010110110")




# print(solution("C"), "100100101010100110100010")
# print(solution("code"), "100100101010100110100010")
# print("code", )

